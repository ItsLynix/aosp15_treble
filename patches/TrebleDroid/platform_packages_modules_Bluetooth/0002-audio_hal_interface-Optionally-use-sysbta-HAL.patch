From 63fe96835d570977917f600b447621e73d03bb85 Mon Sep 17 00:00:00 2001
From: Peter Cai <peter@typeblog.net>
Date: Wed, 24 Aug 2022 15:45:18 -0400
Subject: [PATCH 02/11] audio_hal_interface: Optionally use sysbta HAL

Required to support sysbta, our system-side bt audio implementation.

Change-Id: I59973e6ec84c5923be8a7c67b36b2e237f000860
---
 .../audio_hal_interface/aidl/client_interface_aidl.cc |  6 +++---
 .../audio_hal_interface/aidl/client_interface_aidl.h  |  6 ++++++
 system/audio_hal_interface/hal_version_manager.cc     | 11 +++++++++--
 3 files changed, 18 insertions(+), 5 deletions(-)

diff --git a/system/audio_hal_interface/aidl/client_interface_aidl.cc b/system/audio_hal_interface/aidl/client_interface_aidl.cc
index f4cfee0..90e8fa9 100644
--- a/system/audio_hal_interface/aidl/client_interface_aidl.cc
+++ b/system/audio_hal_interface/aidl/client_interface_aidl.cc
@@ -68,7 +68,7 @@ bool BluetoothAudioClientInterface::IsValid() const {
 
 bool BluetoothAudioClientInterface::is_aidl_available() {
   return AServiceManager_isDeclared(
-      kDefaultAudioProviderFactoryInterface.c_str());
+      audioProviderFactoryInterface().c_str());
 }
 
 std::vector<AudioCapabilities>
@@ -84,7 +84,7 @@ BluetoothAudioClientInterface::GetAudioCapabilities(SessionType session_type) {
   }
   auto provider_factory = IBluetoothAudioProviderFactory::fromBinder(
       ::ndk::SpAIBinder(AServiceManager_waitForService(
-          kDefaultAudioProviderFactoryInterface.c_str())));
+          audioProviderFactoryInterface().c_str())));
 
   if (provider_factory == nullptr) {
     log::error("can't get capability from unknown factory");
@@ -112,7 +112,7 @@ BluetoothAudioClientInterface::GetProviderInfo(
   if (provider_factory == nullptr) {
     provider_factory = IBluetoothAudioProviderFactory::fromBinder(
         ::ndk::SpAIBinder(AServiceManager_waitForService(
-            kDefaultAudioProviderFactoryInterface.c_str())));
+          audioProviderFactoryInterface().c_str())));
   }
 
   if (provider_factory == nullptr) {
diff --git a/system/audio_hal_interface/aidl/client_interface_aidl.h b/system/audio_hal_interface/aidl/client_interface_aidl.h
index 9b92319..9aec3cd 100644
--- a/system/audio_hal_interface/aidl/client_interface_aidl.h
+++ b/system/audio_hal_interface/aidl/client_interface_aidl.h
@@ -177,6 +177,12 @@ class BluetoothAudioClientInterface {
   //     "android.hardware.bluetooth.audio.IBluetoothAudioProviderFactory/default";
   static inline const std::string kDefaultAudioProviderFactoryInterface =
       std::string() + IBluetoothAudioProviderFactory::descriptor + "/default";
+  static inline const std::string kSystemAudioProviderFactoryInterface =
+      std::string() + IBluetoothAudioProviderFactory::descriptor + "/sysbta";
+  static inline const std::string audioProviderFactoryInterface() {
+   return osi_property_get_bool("persist.bluetooth.system_audio_hal.enabled", false)
+    ? kSystemAudioProviderFactoryInterface : kDefaultAudioProviderFactoryInterface;
+  }
 
  private:
   IBluetoothTransportInstance* transport_;
diff --git a/system/audio_hal_interface/hal_version_manager.cc b/system/audio_hal_interface/hal_version_manager.cc
index c4e01bc..c0fc888 100644
--- a/system/audio_hal_interface/hal_version_manager.cc
+++ b/system/audio_hal_interface/hal_version_manager.cc
@@ -25,6 +25,7 @@
 
 #include "aidl/audio_aidl_interfaces.h"
 #include "os/log.h"
+#include "osi/include/properties.h"
 
 namespace bluetooth {
 namespace audio {
@@ -34,6 +35,12 @@ using ::aidl::android::hardware::bluetooth::audio::
 
 static const std::string kDefaultAudioProviderFactoryInterface =
     std::string() + IBluetoothAudioProviderFactory::descriptor + "/default";
+static const std::string kSystemAudioProviderFactoryInterface =
+    std::string() + IBluetoothAudioProviderFactory::descriptor + "/sysbta";
+static inline const std::string& audioProviderFactoryInterface() {
+  return osi_property_get_bool("persist.bluetooth.system_audio_hal.enabled", false)
+    ? kSystemAudioProviderFactoryInterface : kDefaultAudioProviderFactoryInterface;
+}
 
 std::string toString(BluetoothAudioHalTransport transport) {
   switch (transport) {
@@ -75,7 +82,7 @@ BluetoothAudioHalVersion GetAidlInterfaceVersion() {
     int version = 0;
     auto provider_factory = IBluetoothAudioProviderFactory::fromBinder(
         ::ndk::SpAIBinder(AServiceManager_waitForService(
-            kDefaultAudioProviderFactoryInterface.c_str())));
+            audioProviderFactoryInterface().c_str())));
 
     if (provider_factory == nullptr) {
       log::error(
@@ -147,7 +154,7 @@ HalVersionManager::GetProvidersFactory_2_0() {
 HalVersionManager::HalVersionManager() {
   hal_transport_ = BluetoothAudioHalTransport::UNKNOWN;
   if (AServiceManager_checkService(
-          kDefaultAudioProviderFactoryInterface.c_str()) != nullptr) {
+          audioProviderFactoryInterface().c_str()) != nullptr) {
     hal_version_ = GetAidlInterfaceVersion();
     hal_transport_ = BluetoothAudioHalTransport::AIDL;
     return;
-- 
2.39.2

